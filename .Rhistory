mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_wrap(~geo)
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices") %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_wrap(.~geo)
unique(dat$geo)
selected_geo <- c("Cyprus", "Italy",  "Bulgaria", "Euro area (19 countries)",
"Greece", "Spain")
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_wrap(.~geo)
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_wrap(geo)
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp))
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(geo)
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~geo)
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = "")))
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~as.character(geo))
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = "")),
geo = as.character(geo))
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~as.character(geo))
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~geo))
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~geo)
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~geo)
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = "")))
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>% View()
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(~geo)
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_grid(.~geo)
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_wrap(~geo)
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = "")))
selected_geo <- c("Cyprus", "Italy",  "Bulgaria", "Euro area (19 countries)",
"Greece", "Spain")
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) %>%
facet_wrap(~geo)
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp))
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) +
facet_wrap(~geo)
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, gdp)) +
facet_wrap(~geo, scales = "free" )
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
filter(date < '2018-01-01') %>%
ggplot() +
geom_line(aes(date, gdp)) +
facet_wrap(~geo, scales = "free" )
selected_geo <- c( "Greece", "Spain", "Cyprus", "Italy", "Portugal", "Ireland",
"Euro area (19 countries)")
selected_geo <- c( "Greece", "Spain", "Cyprus", "Italy", "Portugal", "Ireland",
"Euro area (19 countries)")
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
filter(date < '2018-01-01') %>%
ggplot() +
geom_line(aes(date, gdp)) +
facet_wrap(~geo, scales = "free" )
View(dat)
# For the original data, see
# http://ec.europa.eu/eurostat/tgm/table.do?tab=table&init=1&plugin=1&language=en&pcode=ts id <- search_eurostat("Modal split of passenger transport",
dat <- get_eurostat("ei_bsco_m", time_format = "num")
dat <- label_eurostat(dat)
View(dat)
dat %>%
filter(s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)") %>%
group_by(geo, indic, date = str_sub(time, 1, 4)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
summarise(Avg = mean(values))
dat %>%
filter(s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)") %>%
group_by(geo, indic, date = str_sub(time, 1, 4)) %>%
summarise(Avg = mean(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = "")))
dat %>%
filter(s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)") %>%
group_by(geo, indic, date = str_sub(time, 1, 4)) %>%
summarise(Avg = mean(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, Avg, color = indic)) +
facet_wrap(geo)
dat %>%
filter(s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)") %>%
group_by(geo, indic, date = str_sub(time, 1, 4)) %>%
summarise(Avg = mean(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, Avg, color = indic)) +
facet_wrap(~geo)
library(tidyverse)
library(rvest)
library(eurostat)
# Get Eurostat data listing
toc <- get_eurostat_toc()
# For the original data, see
dat <- get_eurostat("namq_10_gdp", time_format = "num")
dat <- label_eurostat(dat)
# For the original data, see
dat <- get_eurostat("namq_10_gdp", time_format = "num")
dat <- label_eurostat(dat)
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices") %>%
group_by(geo, str_sub(time, 1, 4), str_sub(as.character(time), 5, 8)) %>%
summarise(gdp = sum(values)) %>% View()
selected_geo <- c( "Greece", "Spain", "Cyprus", "Italy", "Portugal", "Ireland",
"Euro area (19 countries)")
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
filter(date < '2018-01-01') %>%
ggplot() +
geom_line(aes(date, gdp)) +
facet_wrap(~geo, scales = "free" )
# For the original data, see
dat <- get_eurostat("namq_10_gdp", time_format = "num")
dat <- label_eurostat(dat)
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices") %>%
group_by(geo, str_sub(time, 1, 4), str_sub(as.character(time), 5, 8)) %>%
summarise(gdp = sum(values)) %>% View()
selected_geo <- c( "Greece", "Spain", "Cyprus", "Italy", "Portugal", "Ireland",
"Euro area (19 countries)")
# Per quarter
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
group_by(geo, date = str_sub(time, 1, 4)) %>%
summarise(gdp = sum(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
filter(date < '2018-01-01') %>%
ggplot() +
geom_line(aes(date, gdp)) +
facet_wrap(~geo, scales = "free" )
# For the original data, see
# http://ec.europa.eu/eurostat/tgm/table.do?tab=table&init=1&plugin=1&language=en&pcode=ts id <- search_eurostat("Modal split of passenger transport",
dat <- get_eurostat("ei_bsco_m", time_format = "num")
dat <- label_eurostat(dat)
dat %>%
filter(s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)") %>%
group_by(geo, indic, date = str_sub(time, 1, 4)) %>%
summarise(Avg = mean(values)) %>%
mutate(date = as.Date(paste(date, "-01-01", sep = ""))) %>%
ggplot() +
geom_line(aes(date, Avg, color = indic)) +
facet_wrap(~geo)
library(forecast)
library(forecast)
# For the original data, see
dat <- get_eurostat("namq_10_gdp", time_format = "num")
dat <- label_eurostat(dat)
# Per quarter
dat %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices") %>%
group_by(geo, str_sub(time, 1, 4), str_sub(as.character(time), 5, 8)) %>%
summarise(gdp = sum(values)) %>% View()
selected_geo <- "Euro area (19 countries)"
# Per quarter
dat <-
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo)
View(dat)
View(dat)
gdp_ts <- ts(dat[, 6], start = c(1995, 1), frequency = 4)
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Monthly sales for Softone with linear trend",
y = "Monthly sales (€)",
x = "year") +
geom_smooth(method = "lm")
autoplot(gdp_ts, facets = TRUE)
View(dat)
library(forecast)
# For the original data, see
dat <- get_eurostat("namq_10_gdp", time_format = "num")
dat <- label_eurostat(dat)
selected_geo <- "Euro area (19 countries)"
# Per quarter
dat <-
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
arrange(desc(time))
View(dat)
# Per quarter
dat <-
dat %>%
mutate(geo = as.character(geo)) %>%
filter(unit == "Current prices, million euro",
s_adj == "Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",
na_item == "Gross domestic product at market prices",
geo %in% selected_geo) %>%
arrange(time)
View(dat)
gdp_ts <- ts(dat[, 6], start = c(1995, 1), frequency = 4)
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Monthly sales for Softone with linear trend",
y = "Monthly sales (€)",
x = "year") +
geom_smooth(method = "lm")
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Quarterly GDP for Softone with linear trend",
y = "Quarterly GDP (€)",
x = "year") +
geom_smooth(method = "lm")
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Quarterly GDP for Softone with lowess trend",
y = "Quarterly GDP (€)",
x = "year") +
geom_smooth(method = "lowess")
?geom_smooth()
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Quarterly GDP for Softone with linear trend",
y = "Quarterly GDP (€)",
x = "year") +
geom_smooth(method = "lm")
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Quarterly GDP for Softone with lowess trend",
y = "Quarterly GDP (€)",
x = "year") +
geom_smooth(method = "loess")
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Quarterly GDP for EU 19 with linear trend",
y = "Quarterly GDP (€)",
x = "year") +
geom_smooth(method = "lm")
autoplot(gdp_ts, facets = TRUE)+
labs(title = "Quarterly GDP for EU 19 with lowess trend",
y = "Quarterly GDP (€)",
x = "year") +
geom_smooth(method = "loess")
ggseasonplot(gdp_ts) +
labs(title = "Monthly sales per year",
y = "Sales (€)")
ggseasonplot(gdp_ts, polar = TRUE)+
labs(title = "Monthly sales per year",
y = "Sales (€)")
ggsubseriesplot(gdp_ts)
gglagplot(gdp_ts)
ggAcf(gdp_ts)
